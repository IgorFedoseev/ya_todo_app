// Mocks generated by Mockito 5.4.2 from annotations
// in ya_todo_list/test/mock_data/getting_data_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ya_todo_list/domain/api_clients.dart' as _i7;
import 'package:ya_todo_list/model/task_item.dart' as _i5;
import 'package:ya_todo_list/storage/db_hive.dart' as _i3;
import 'package:ya_todo_list/storage/shared_prefs_storage.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpClient_0 extends _i1.SmartFake implements _i2.HttpClient {
  _FakeHttpClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HiveDataBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveDataBase extends _i1.Mock implements _i3.HiveDataBase {
  MockHiveDataBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> putTask(_i5.TaskItem? task) => (super.noSuchMethod(
        Invocation.method(
          #putTask,
          [task],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i5.TaskItem>> getTasks() => (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TaskItem>>.value(<_i5.TaskItem>[]),
      ) as _i4.Future<List<_i5.TaskItem>>);
  @override
  _i4.Future<void> deleteTask(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [SharedPrefsStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPrefsStorage extends _i1.Mock
    implements _i6.SharedPrefsStorage {
  MockSharedPrefsStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<int> getRevision() => (super.noSuchMethod(
        Invocation.method(
          #getRevision,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<void> setRevision(int? revision) => (super.noSuchMethod(
        Invocation.method(
          #setRevision,
          [revision],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String> readData() => (super.noSuchMethod(
        Invocation.method(
          #readData,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> setData(String? json) => (super.noSuchMethod(
        Invocation.method(
          #setData,
          [json],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i7.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeHttpClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.HttpClient);
  @override
  _i4.Future<Map<String, dynamic>> getData() => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<void> addTask(
    int? revision,
    _i5.TaskItem? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            revision,
            task,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteTask(
    int? revision,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            revision,
            id,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> editTask(
    int? revision,
    _i5.TaskItem? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editTask,
          [
            revision,
            task,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> patchTasks(
    int? revision,
    List<_i5.TaskItem>? tasks,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchTasks,
          [
            revision,
            tasks,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
